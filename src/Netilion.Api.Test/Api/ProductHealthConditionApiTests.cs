/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing ProductHealthConditionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProductHealthConditionApiTests
    {
        private ProductHealthConditionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProductHealthConditionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProductHealthConditionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProductHealthConditionApi
            //Assert.IsInstanceOfType(typeof(ProductHealthConditionApi), instance, "instance is a ProductHealthConditionApi");
        }

        /// <summary>
        /// Test AddHealthConditionsToProduct
        /// </summary>
        [Test]
        public void AddHealthConditionsToProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HealthConditionsRequest body = null;
            //long? productId = null;
            //instance.AddHealthConditionsToProduct(body, productId);
            
        }
        /// <summary>
        /// Test GetProductHealthConditions
        /// </summary>
        [Test]
        public void GetProductHealthConditionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? productId = null;
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string healthConditionId = null;
            //string diagnosisCode = null;
            //string deviceIdent = null;
            //string productIdentifier = null;
            //string protocol = null;
            //string orderBy = null;
            //string acceptLanguage = null;
            //var response = instance.GetProductHealthConditions(productId, page, perPage, include, healthConditionId, diagnosisCode, deviceIdent, productIdentifier, protocol, orderBy, acceptLanguage);
            //Assert.IsInstanceOf<HealthConditionsResponse> (response, "response is HealthConditionsResponse");
        }
        /// <summary>
        /// Test ReaplaceHealthConditionsOfProduct
        /// </summary>
        [Test]
        public void ReaplaceHealthConditionsOfProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HealthConditionsRequest body = null;
            //long? productId = null;
            //instance.ReaplaceHealthConditionsOfProduct(body, productId);
            
        }
        /// <summary>
        /// Test RemoveHealthConditionsOfProduct
        /// </summary>
        [Test]
        public void RemoveHealthConditionsOfProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HealthConditionCauseIDs body = null;
            //long? productId = null;
            //instance.RemoveHealthConditionsOfProduct(body, productId);
            
        }
    }

}
