/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing QuotationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class QuotationApiTests
    {
        private QuotationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new QuotationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of QuotationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' QuotationApi
            //Assert.IsInstanceOfType(typeof(QuotationApi), instance, "instance is a QuotationApi");
        }

        /// <summary>
        /// Test AddDocumentsToQuotation
        /// </summary>
        [Test]
        public void AddDocumentsToQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentIDs body = null;
            //long? quotationId = null;
            //instance.AddDocumentsToQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test AddProductsToQuotation
        /// </summary>
        [Test]
        public void AddProductsToQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductIDs body = null;
            //long? quotationId = null;
            //instance.AddProductsToQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test AddPurchaseOrdersToQuotation
        /// </summary>
        [Test]
        public void AddPurchaseOrdersToQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseOrderIDs body = null;
            //long? quotationId = null;
            //instance.AddPurchaseOrdersToQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test CreateQuotation
        /// </summary>
        [Test]
        public void CreateQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QuotationRequest body = null;
            //var response = instance.CreateQuotation(body);
            //Assert.IsInstanceOf<QuotationResponse> (response, "response is QuotationResponse");
        }
        /// <summary>
        /// Test DeleteQuotation
        /// </summary>
        [Test]
        public void DeleteQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteQuotation(id);
            
        }
        /// <summary>
        /// Test GetDocumentsOfQuotation
        /// </summary>
        [Test]
        public void GetDocumentsOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? quotationId = null;
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string name = null;
            //string documentVersion = null;
            //string number = null;
            //string statusId = null;
            //string classificationId = null;
            //string tenantId = null;
            //string categoryId = null;
            //DateTime? validFrom = null;
            //DateTime? validUntil = null;
            //DateTime? validAt = null;
            //string orderBy = null;
            //string acceptLanguage = null;
            //var response = instance.GetDocumentsOfQuotation(quotationId, page, perPage, include, name, documentVersion, number, statusId, classificationId, tenantId, categoryId, validFrom, validUntil, validAt, orderBy, acceptLanguage);
            //Assert.IsInstanceOf<DocumentsResponse> (response, "response is DocumentsResponse");
        }
        /// <summary>
        /// Test GetProductsOfQuotation
        /// </summary>
        [Test]
        public void GetProductsOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? quotationId = null;
            //int? page = null;
            //int? perPage = null;
            //string productCode = null;
            //string name = null;
            //string manufacturerId = null;
            //string statusId = null;
            //string parentId = null;
            //string orderBy = null;
            //string acceptLanguage = null;
            //var response = instance.GetProductsOfQuotation(quotationId, page, perPage, productCode, name, manufacturerId, statusId, parentId, orderBy, acceptLanguage);
            //Assert.IsInstanceOf<ProductsResponse> (response, "response is ProductsResponse");
        }
        /// <summary>
        /// Test GetPurchaseOrdersOfQuotation
        /// </summary>
        [Test]
        public void GetPurchaseOrdersOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string quotationId = null;
            //int? page = null;
            //int? perPage = null;
            //string name = null;
            //string number = null;
            //string date = null;
            //string dateFrom = null;
            //string dateTo = null;
            //string statusId = null;
            //string senderId = null;
            //string receiverId = null;
            //string customerNumber = null;
            //string orderBy = null;
            //var response = instance.GetPurchaseOrdersOfQuotation(quotationId, page, perPage, name, number, date, dateFrom, dateTo, statusId, senderId, receiverId, customerNumber, orderBy);
            //Assert.IsInstanceOf<PurchaseOrdersResponse> (response, "response is PurchaseOrdersResponse");
        }
        /// <summary>
        /// Test GetQuotationById
        /// </summary>
        [Test]
        public void GetQuotationByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetQuotationById(id);
            //Assert.IsInstanceOf<QuotationResponse> (response, "response is QuotationResponse");
        }
        /// <summary>
        /// Test GetQuotationIdStatus
        /// </summary>
        [Test]
        public void GetQuotationIdStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? quotationId = null;
            //string include = null;
            //string acceptLanguage = null;
            //var response = instance.GetQuotationIdStatus(quotationId, include, acceptLanguage);
            //Assert.IsInstanceOf<QuotationStatusResponse> (response, "response is QuotationStatusResponse");
        }
        /// <summary>
        /// Test GetQuotations
        /// </summary>
        [Test]
        public void GetQuotationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string name = null;
            //string number = null;
            //string statusId = null;
            //string date = null;
            //string dateFrom = null;
            //string dateTo = null;
            //string senderId = null;
            //string receiverId = null;
            //string requestForQuotationId = null;
            //string orderBy = null;
            //var response = instance.GetQuotations(page, perPage, name, number, statusId, date, dateFrom, dateTo, senderId, receiverId, requestForQuotationId, orderBy);
            //Assert.IsInstanceOf<QuotationsResponse> (response, "response is QuotationsResponse");
        }
        /// <summary>
        /// Test RemoveDocumentsFromQuotation
        /// </summary>
        [Test]
        public void RemoveDocumentsFromQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentIDs body = null;
            //long? quotationId = null;
            //instance.RemoveDocumentsFromQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test RemoveProductsFromQuotation
        /// </summary>
        [Test]
        public void RemoveProductsFromQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductIDs body = null;
            //long? quotationId = null;
            //instance.RemoveProductsFromQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test RemovePurchaseOrdersFromQuotation
        /// </summary>
        [Test]
        public void RemovePurchaseOrdersFromQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseOrderIDs body = null;
            //long? quotationId = null;
            //instance.RemovePurchaseOrdersFromQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test ReplaceDocumentsOfQuotation
        /// </summary>
        [Test]
        public void ReplaceDocumentsOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentIDs body = null;
            //long? quotationId = null;
            //instance.ReplaceDocumentsOfQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test ReplaceProductsOfQuotation
        /// </summary>
        [Test]
        public void ReplaceProductsOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductIDs body = null;
            //long? quotationId = null;
            //instance.ReplaceProductsOfQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test ReplacePurchaseOrdersOfQuotation
        /// </summary>
        [Test]
        public void ReplacePurchaseOrdersOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseOrderIDs body = null;
            //long? quotationId = null;
            //instance.ReplacePurchaseOrdersOfQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test UpdateProductQuantitiesOfQuotation
        /// </summary>
        [Test]
        public void UpdateProductQuantitiesOfQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductQuantity body = null;
            //long? quotationId = null;
            //instance.UpdateProductQuantitiesOfQuotation(body, quotationId);
            
        }
        /// <summary>
        /// Test UpdateQuotation
        /// </summary>
        [Test]
        public void UpdateQuotationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QuotationRequest body = null;
            //long? id = null;
            //instance.UpdateQuotation(body, id);
            
        }
    }

}
