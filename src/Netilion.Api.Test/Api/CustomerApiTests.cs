/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing CustomerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomerApiTests
    {
        private CustomerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomerApi
            //Assert.IsInstanceOfType(typeof(CustomerApi), instance, "instance is a CustomerApi");
        }

        /// <summary>
        /// Test CreateCustomer
        /// </summary>
        [Test]
        public void CreateCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomerRequest body = null;
            //var response = instance.CreateCustomer(body);
            //Assert.IsInstanceOf<CustomerResponse> (response, "response is CustomerResponse");
        }
        /// <summary>
        /// Test DeleteCustomer
        /// </summary>
        [Test]
        public void DeleteCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteCustomer(id);
            
        }
        /// <summary>
        /// Test GetCustomerById
        /// </summary>
        [Test]
        public void GetCustomerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetCustomerById(id);
            //Assert.IsInstanceOf<CustomerResponse> (response, "response is CustomerResponse");
        }
        /// <summary>
        /// Test GetCustomers
        /// </summary>
        [Test]
        public void GetCustomersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string name = null;
            //string number = null;
            //string orderBy = null;
            //var response = instance.GetCustomers(page, perPage, name, number, orderBy);
            //Assert.IsInstanceOf<CustomersResponse> (response, "response is CustomersResponse");
        }
        /// <summary>
        /// Test UpdateCustomer
        /// </summary>
        [Test]
        public void UpdateCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomerRequest body = null;
            //long? id = null;
            //instance.UpdateCustomer(body, id);
            
        }
    }

}
