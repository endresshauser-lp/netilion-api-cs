/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing DeliveryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DeliveryApiTests
    {
        private DeliveryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DeliveryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DeliveryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DeliveryApi
            //Assert.IsInstanceOfType(typeof(DeliveryApi), instance, "instance is a DeliveryApi");
        }

        /// <summary>
        /// Test AddAssetsToDelivery
        /// </summary>
        [Test]
        public void AddAssetsToDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AssetIDs body = null;
            //long? deliveryId = null;
            //instance.AddAssetsToDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test AddDocumentsToDelivery
        /// </summary>
        [Test]
        public void AddDocumentsToDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentIDs body = null;
            //long? deliveryId = null;
            //instance.AddDocumentsToDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test AddPurchaseOrdersToDelivery
        /// </summary>
        [Test]
        public void AddPurchaseOrdersToDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseOrderIDs body = null;
            //long? deliveryId = null;
            //instance.AddPurchaseOrdersToDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test CreateDelivery
        /// </summary>
        [Test]
        public void CreateDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeliveryRequest body = null;
            //var response = instance.CreateDelivery(body);
            //Assert.IsInstanceOf<DeliveryResponse> (response, "response is DeliveryResponse");
        }
        /// <summary>
        /// Test DeleteDelivery
        /// </summary>
        [Test]
        public void DeleteDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteDelivery(id);
            
        }
        /// <summary>
        /// Test GetAssetsOfDelivery
        /// </summary>
        [Test]
        public void GetAssetsOfDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? deliveryId = null;
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string serialNumber = null;
            //string productId = null;
            //string categoryId = null;
            //string parentId = null;
            //string manufacturerId = null;
            //string statusId = null;
            //string statusCode = null;
            //DateTime? productionDate = null;
            //DateTime? productionDateFrom = null;
            //DateTime? productionDateTo = null;
            //string specificationsKey = null;
            //string specificationsValue = null;
            //DateTime? createdAt = null;
            //string createdAtFrom = null;
            //string createdAtTo = null;
            //DateTime? updatedAt = null;
            //string updatedAtFrom = null;
            //string updatedAtTo = null;
            //bool? ownershipClaimed = null;
            //string permission = null;
            //string orderBy = null;
            //var response = instance.GetAssetsOfDelivery(deliveryId, page, perPage, include, serialNumber, productId, categoryId, parentId, manufacturerId, statusId, statusCode, productionDate, productionDateFrom, productionDateTo, specificationsKey, specificationsValue, createdAt, createdAtFrom, createdAtTo, updatedAt, updatedAtFrom, updatedAtTo, ownershipClaimed, permission, orderBy);
            //Assert.IsInstanceOf<AssetsResponse> (response, "response is AssetsResponse");
        }
        /// <summary>
        /// Test GetDeliveries
        /// </summary>
        [Test]
        public void GetDeliveriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string number = null;
            //string name = null;
            //string statusId = null;
            //DateTime? dateOfShipment = null;
            //DateTime? dateOfShipmentFrom = null;
            //DateTime? dateOfShipmentTo = null;
            //string senderId = null;
            //string receiverId = null;
            //string customerNumber = null;
            //string orderBy = null;
            //var response = instance.GetDeliveries(page, perPage, number, name, statusId, dateOfShipment, dateOfShipmentFrom, dateOfShipmentTo, senderId, receiverId, customerNumber, orderBy);
            //Assert.IsInstanceOf<DeliveriesResponse> (response, "response is DeliveriesResponse");
        }
        /// <summary>
        /// Test GetDeliveryById
        /// </summary>
        [Test]
        public void GetDeliveryByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetDeliveryById(id);
            //Assert.IsInstanceOf<DeliveryResponse> (response, "response is DeliveryResponse");
        }
        /// <summary>
        /// Test GetDeliveryIdStatus
        /// </summary>
        [Test]
        public void GetDeliveryIdStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? deliveryId = null;
            //string include = null;
            //string acceptLanguage = null;
            //var response = instance.GetDeliveryIdStatus(deliveryId, include, acceptLanguage);
            //Assert.IsInstanceOf<DeliveryStatusResponse> (response, "response is DeliveryStatusResponse");
        }
        /// <summary>
        /// Test GetDocumentsOfDelivery
        /// </summary>
        [Test]
        public void GetDocumentsOfDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? deliveryId = null;
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string name = null;
            //string documentVersion = null;
            //string number = null;
            //string statusId = null;
            //string classificationId = null;
            //string tenantId = null;
            //string categoryId = null;
            //DateTime? validFrom = null;
            //DateTime? validUntil = null;
            //DateTime? validAt = null;
            //string orderBy = null;
            //string acceptLanguage = null;
            //var response = instance.GetDocumentsOfDelivery(deliveryId, page, perPage, include, name, documentVersion, number, statusId, classificationId, tenantId, categoryId, validFrom, validUntil, validAt, orderBy, acceptLanguage);
            //Assert.IsInstanceOf<DocumentsResponse> (response, "response is DocumentsResponse");
        }
        /// <summary>
        /// Test GetPurchaseOrdersOfDelivery
        /// </summary>
        [Test]
        public void GetPurchaseOrdersOfDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? deliveryId = null;
            //int? page = null;
            //int? perPage = null;
            //string name = null;
            //string number = null;
            //string statusId = null;
            //string date = null;
            //string dateFrom = null;
            //string dateTo = null;
            //string senderId = null;
            //string receiverId = null;
            //string quotationId = null;
            //string customerNumber = null;
            //string orderBy = null;
            //var response = instance.GetPurchaseOrdersOfDelivery(deliveryId, page, perPage, name, number, statusId, date, dateFrom, dateTo, senderId, receiverId, quotationId, customerNumber, orderBy);
            //Assert.IsInstanceOf<PurchaseOrdersResponse> (response, "response is PurchaseOrdersResponse");
        }
        /// <summary>
        /// Test RemoveAssetsFromDelivery
        /// </summary>
        [Test]
        public void RemoveAssetsFromDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AssetIDs body = null;
            //long? deliveryId = null;
            //instance.RemoveAssetsFromDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test RemoveDocumentsFromDelivery
        /// </summary>
        [Test]
        public void RemoveDocumentsFromDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentIDs body = null;
            //long? deliveryId = null;
            //instance.RemoveDocumentsFromDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test RemovePurchaseOrdersFromDelivery
        /// </summary>
        [Test]
        public void RemovePurchaseOrdersFromDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseOrderIDs body = null;
            //long? deliveryId = null;
            //instance.RemovePurchaseOrdersFromDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test ReplaceAssetsOfDelivery
        /// </summary>
        [Test]
        public void ReplaceAssetsOfDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AssetIDs body = null;
            //long? deliveryId = null;
            //instance.ReplaceAssetsOfDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test ReplaceDocumentsOfDelivery
        /// </summary>
        [Test]
        public void ReplaceDocumentsOfDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentIDs body = null;
            //long? deliveryId = null;
            //instance.ReplaceDocumentsOfDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test ReplacePurchaseOrdersOfDelivery
        /// </summary>
        [Test]
        public void ReplacePurchaseOrdersOfDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseOrderIDs body = null;
            //long? deliveryId = null;
            //instance.ReplacePurchaseOrdersOfDelivery(body, deliveryId);
            
        }
        /// <summary>
        /// Test UpdateDelivery
        /// </summary>
        [Test]
        public void UpdateDeliveryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeliveryRequest body = null;
            //long? id = null;
            //instance.UpdateDelivery(body, id);
            
        }
    }

}
