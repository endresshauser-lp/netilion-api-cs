/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing CompanyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompanyApiTests
    {
        private CompanyApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompanyApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompanyApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompanyApi
            //Assert.IsInstanceOfType(typeof(CompanyApi), instance, "instance is a CompanyApi");
        }

        /// <summary>
        /// Test CreateCompany
        /// </summary>
        [Test]
        public void CreateCompanyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CompanyRequest body = null;
            //var response = instance.CreateCompany(body);
            //Assert.IsInstanceOf<CompanyResponse> (response, "response is CompanyResponse");
        }
        /// <summary>
        /// Test DeleteCompany
        /// </summary>
        [Test]
        public void DeleteCompanyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteCompany(id);
            
        }
        /// <summary>
        /// Test GetAssetCompanyOptions
        /// </summary>
        [Test]
        public void GetAssetCompanyOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? assetId = null;
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string name = null;
            //string tenantId = null;
            //string orderBy = null;
            //var response = instance.GetAssetCompanyOptions(assetId, page, perPage, include, name, tenantId, orderBy);
            //Assert.IsInstanceOf<Companies> (response, "response is Companies");
        }
        /// <summary>
        /// Test GetCompanies
        /// </summary>
        [Test]
        public void GetCompaniesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string name = null;
            //string parentId = null;
            //string tenantId = null;
            //string orderBy = null;
            //var response = instance.GetCompanies(page, perPage, include, name, parentId, tenantId, orderBy);
            //Assert.IsInstanceOf<Companies1> (response, "response is Companies1");
        }
        /// <summary>
        /// Test GetCompanyById
        /// </summary>
        [Test]
        public void GetCompanyByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //string include = null;
            //var response = instance.GetCompanyById(id, include);
            //Assert.IsInstanceOf<CompanyResponse> (response, "response is CompanyResponse");
        }
        /// <summary>
        /// Test GetDeliveriesReceivedOfCompany
        /// </summary>
        [Test]
        public void GetDeliveriesReceivedOfCompanyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? companyId = null;
            //int? page = null;
            //int? perPage = null;
            //string number = null;
            //string name = null;
            //string statusId = null;
            //DateTime? dateOfShipment = null;
            //DateTime? dateOfShipmentFrom = null;
            //DateTime? dateOfShipmentTo = null;
            //string senderId = null;
            //string receiverId = null;
            //string orderBy = null;
            //var response = instance.GetDeliveriesReceivedOfCompany(companyId, page, perPage, number, name, statusId, dateOfShipment, dateOfShipmentFrom, dateOfShipmentTo, senderId, receiverId, orderBy);
            //Assert.IsInstanceOf<DeliveriesResponse> (response, "response is DeliveriesResponse");
        }
        /// <summary>
        /// Test GetDeliveriesSentOfCompany
        /// </summary>
        [Test]
        public void GetDeliveriesSentOfCompanyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? companyId = null;
            //int? page = null;
            //int? perPage = null;
            //string number = null;
            //string name = null;
            //string statusId = null;
            //DateTime? dateOfShipment = null;
            //DateTime? dateOfShipmentFrom = null;
            //DateTime? dateOfShipmentTo = null;
            //string senderId = null;
            //string receiverId = null;
            //string orderBy = null;
            //var response = instance.GetDeliveriesSentOfCompany(companyId, page, perPage, number, name, statusId, dateOfShipment, dateOfShipmentFrom, dateOfShipmentTo, senderId, receiverId, orderBy);
            //Assert.IsInstanceOf<DeliveriesResponse> (response, "response is DeliveriesResponse");
        }
        /// <summary>
        /// Test GetProductsOfCompany
        /// </summary>
        [Test]
        public void GetProductsOfCompanyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? companyId = null;
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string productCode = null;
            //string name = null;
            //string statusId = null;
            //string categoryId = null;
            //string parentId = null;
            //string tenantId = null;
            //string orderBy = null;
            //var response = instance.GetProductsOfCompany(companyId, page, perPage, include, productCode, name, statusId, categoryId, parentId, tenantId, orderBy);
            //Assert.IsInstanceOf<ProductsResponse> (response, "response is ProductsResponse");
        }
        /// <summary>
        /// Test UpdateCompany
        /// </summary>
        [Test]
        public void UpdateCompanyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CompanyRequest body = null;
            //long? id = null;
            //instance.UpdateCompany(body, id);
            
        }
    }

}
