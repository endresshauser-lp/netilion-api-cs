/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing HealthConditionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class HealthConditionApiTests
    {
        private HealthConditionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new HealthConditionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HealthConditionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' HealthConditionApi
            //Assert.IsInstanceOfType(typeof(HealthConditionApi), instance, "instance is a HealthConditionApi");
        }

        /// <summary>
        /// Test CreateHealthCondition
        /// </summary>
        [Test]
        public void CreateHealthConditionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HealthConditionRequest body = null;
            //var response = instance.CreateHealthCondition(body);
            //Assert.IsInstanceOf<HealthConditionResponse> (response, "response is HealthConditionResponse");
        }
        /// <summary>
        /// Test DeleteHealthCondition
        /// </summary>
        [Test]
        public void DeleteHealthConditionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteHealthCondition(id);
            
        }
        /// <summary>
        /// Test GetHealthConditionById
        /// </summary>
        [Test]
        public void GetHealthConditionByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //string include = null;
            //string acceptLanguage = null;
            //var response = instance.GetHealthConditionById(id, include, acceptLanguage);
            //Assert.IsInstanceOf<HealthConditionResponse> (response, "response is HealthConditionResponse");
        }
        /// <summary>
        /// Test GetHealthConditions
        /// </summary>
        [Test]
        public void GetHealthConditionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string include = null;
            //string assetStatusId = null;
            //string tenantId = null;
            //string diagnosisCode = null;
            //string deviceIdent = null;
            //string productIdentifier = null;
            //string protocol = null;
            //string protocolVersion = null;
            //bool? hidden = null;
            //string orderBy = null;
            //string acceptLanguage = null;
            //var response = instance.GetHealthConditions(page, perPage, include, assetStatusId, tenantId, diagnosisCode, deviceIdent, productIdentifier, protocol, protocolVersion, hidden, orderBy, acceptLanguage);
            //Assert.IsInstanceOf<HealthConditionsResponse> (response, "response is HealthConditionsResponse");
        }
        /// <summary>
        /// Test UpdateHealthCondition
        /// </summary>
        [Test]
        public void UpdateHealthConditionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HealthConditionRequest body = null;
            //long? id = null;
            //instance.UpdateHealthCondition(body, id);
            
        }
    }

}
