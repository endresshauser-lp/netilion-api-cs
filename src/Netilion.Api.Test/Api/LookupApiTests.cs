/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Netilion.Api.Client;
using Netilion.Api.Api;
using Netilion.Api.Model;

namespace Netilion.Api.Test
{
    /// <summary>
    ///  Class for testing LookupApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LookupApiTests
    {
        private LookupApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LookupApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LookupApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LookupApi
            //Assert.IsInstanceOfType(typeof(LookupApi), instance, "instance is a LookupApi");
        }

        /// <summary>
        /// Test EhExtendedOrderCodeLookup
        /// </summary>
        [Test]
        public void EhExtendedOrderCodeLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderCode = null;
            //var response = instance.EhExtendedOrderCodeLookup(orderCode);
            //Assert.IsInstanceOf<ExtendedOrderCode> (response, "response is ExtendedOrderCode");
        }
        /// <summary>
        /// Test EhProductLookup
        /// </summary>
        [Test]
        public void EhProductLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serialNumber = null;
            //var response = instance.EhProductLookup(serialNumber);
            //Assert.IsInstanceOf<ProductResponse> (response, "response is ProductResponse");
        }
        /// <summary>
        /// Test EhSuccessorLookup
        /// </summary>
        [Test]
        public void EhSuccessorLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string include = null;
            //string serialNumber = null;
            //string orderCode = null;
            //string productCode = null;
            //var response = instance.EhSuccessorLookup(include, serialNumber, orderCode, productCode);
            //Assert.IsInstanceOf<SuccessorsResponse> (response, "response is SuccessorsResponse");
        }
    }

}
