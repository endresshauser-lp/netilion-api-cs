/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Netilion.Api.Client.SwaggerDateConverter;

namespace Netilion.Api.Model
{
    /// <summary>
    /// ProductResponseLinks
    /// </summary>
    [DataContract]
        public partial class ProductResponseLinks :  IEquatable<ProductResponseLinks>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductResponseLinks" /> class.
        /// </summary>
        /// <param name="purchaseOrders">purchaseOrders.</param>
        /// <param name="quotations">quotations.</param>
        /// <param name="categories">categories.</param>
        /// <param name="documents">documents.</param>
        /// <param name="pictures">pictures.</param>
        /// <param name="specifications">specifications.</param>
        /// <param name="healthConditions">healthConditions.</param>
        /// <param name="softwares">softwares.</param>
        /// <param name="spareParts">spareParts.</param>
        public ProductResponseLinks(Link purchaseOrders = default(Link), Link quotations = default(Link), Link categories = default(Link), Link documents = default(Link), Link pictures = default(Link), Link specifications = default(Link), Link healthConditions = default(Link), Link softwares = default(Link), Link spareParts = default(Link))
        {
            this.PurchaseOrders = purchaseOrders;
            this.Quotations = quotations;
            this.Categories = categories;
            this.Documents = documents;
            this.Pictures = pictures;
            this.Specifications = specifications;
            this.HealthConditions = healthConditions;
            this.Softwares = softwares;
            this.SpareParts = spareParts;
        }
        
        /// <summary>
        /// Gets or Sets PurchaseOrders
        /// </summary>
        [DataMember(Name="purchase_orders", EmitDefaultValue=false)]
        public Link PurchaseOrders { get; set; }

        /// <summary>
        /// Gets or Sets Quotations
        /// </summary>
        [DataMember(Name="quotations", EmitDefaultValue=false)]
        public Link Quotations { get; set; }

        /// <summary>
        /// Gets or Sets Categories
        /// </summary>
        [DataMember(Name="categories", EmitDefaultValue=false)]
        public Link Categories { get; set; }

        /// <summary>
        /// Gets or Sets Documents
        /// </summary>
        [DataMember(Name="documents", EmitDefaultValue=false)]
        public Link Documents { get; set; }

        /// <summary>
        /// Gets or Sets Pictures
        /// </summary>
        [DataMember(Name="pictures", EmitDefaultValue=false)]
        public Link Pictures { get; set; }

        /// <summary>
        /// Gets or Sets Specifications
        /// </summary>
        [DataMember(Name="specifications", EmitDefaultValue=false)]
        public Link Specifications { get; set; }

        /// <summary>
        /// Gets or Sets HealthConditions
        /// </summary>
        [DataMember(Name="health_conditions", EmitDefaultValue=false)]
        public Link HealthConditions { get; set; }

        /// <summary>
        /// Gets or Sets Softwares
        /// </summary>
        [DataMember(Name="softwares", EmitDefaultValue=false)]
        public Link Softwares { get; set; }

        /// <summary>
        /// Gets or Sets SpareParts
        /// </summary>
        [DataMember(Name="spare_parts", EmitDefaultValue=false)]
        public Link SpareParts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProductResponseLinks {\n");
            sb.Append("  PurchaseOrders: ").Append(PurchaseOrders).Append("\n");
            sb.Append("  Quotations: ").Append(Quotations).Append("\n");
            sb.Append("  Categories: ").Append(Categories).Append("\n");
            sb.Append("  Documents: ").Append(Documents).Append("\n");
            sb.Append("  Pictures: ").Append(Pictures).Append("\n");
            sb.Append("  Specifications: ").Append(Specifications).Append("\n");
            sb.Append("  HealthConditions: ").Append(HealthConditions).Append("\n");
            sb.Append("  Softwares: ").Append(Softwares).Append("\n");
            sb.Append("  SpareParts: ").Append(SpareParts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProductResponseLinks);
        }

        /// <summary>
        /// Returns true if ProductResponseLinks instances are equal
        /// </summary>
        /// <param name="input">Instance of ProductResponseLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProductResponseLinks input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PurchaseOrders == input.PurchaseOrders ||
                    (this.PurchaseOrders != null &&
                    this.PurchaseOrders.Equals(input.PurchaseOrders))
                ) && 
                (
                    this.Quotations == input.Quotations ||
                    (this.Quotations != null &&
                    this.Quotations.Equals(input.Quotations))
                ) && 
                (
                    this.Categories == input.Categories ||
                    (this.Categories != null &&
                    this.Categories.Equals(input.Categories))
                ) && 
                (
                    this.Documents == input.Documents ||
                    (this.Documents != null &&
                    this.Documents.Equals(input.Documents))
                ) && 
                (
                    this.Pictures == input.Pictures ||
                    (this.Pictures != null &&
                    this.Pictures.Equals(input.Pictures))
                ) && 
                (
                    this.Specifications == input.Specifications ||
                    (this.Specifications != null &&
                    this.Specifications.Equals(input.Specifications))
                ) && 
                (
                    this.HealthConditions == input.HealthConditions ||
                    (this.HealthConditions != null &&
                    this.HealthConditions.Equals(input.HealthConditions))
                ) && 
                (
                    this.Softwares == input.Softwares ||
                    (this.Softwares != null &&
                    this.Softwares.Equals(input.Softwares))
                ) && 
                (
                    this.SpareParts == input.SpareParts ||
                    (this.SpareParts != null &&
                    this.SpareParts.Equals(input.SpareParts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PurchaseOrders != null)
                    hashCode = hashCode * 59 + this.PurchaseOrders.GetHashCode();
                if (this.Quotations != null)
                    hashCode = hashCode * 59 + this.Quotations.GetHashCode();
                if (this.Categories != null)
                    hashCode = hashCode * 59 + this.Categories.GetHashCode();
                if (this.Documents != null)
                    hashCode = hashCode * 59 + this.Documents.GetHashCode();
                if (this.Pictures != null)
                    hashCode = hashCode * 59 + this.Pictures.GetHashCode();
                if (this.Specifications != null)
                    hashCode = hashCode * 59 + this.Specifications.GetHashCode();
                if (this.HealthConditions != null)
                    hashCode = hashCode * 59 + this.HealthConditions.GetHashCode();
                if (this.Softwares != null)
                    hashCode = hashCode * 59 + this.Softwares.GetHashCode();
                if (this.SpareParts != null)
                    hashCode = hashCode * 59 + this.SpareParts.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
