/* 
 * Netilion API Documentation
 *
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Netilion.Api.Client.SwaggerDateConverter;

namespace Netilion.Api.Model
{
    /// <summary>
    /// EdgeDeviceResponseApiSubscription
    /// </summary>
    [DataContract]
        public partial class EdgeDeviceResponseApiSubscription :  IEquatable<EdgeDeviceResponseApiSubscription>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdgeDeviceResponseApiSubscription" /> class.
        /// </summary>
        /// <param name="id">ID of the nested resources (required).</param>
        /// <param name="clientApplication">clientApplication (required).</param>
        /// <param name="href">href to the nested resource (required).</param>
        public EdgeDeviceResponseApiSubscription(long? id = default(long?), NestedIDHrefName clientApplication = default(NestedIDHrefName), string href = default(string))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new InvalidDataException("id is a required property for EdgeDeviceResponseApiSubscription and cannot be null");
            }
            else
            {
                this.Id = id;
            }
            // to ensure "clientApplication" is required (not null)
            if (clientApplication == null)
            {
                throw new InvalidDataException("clientApplication is a required property for EdgeDeviceResponseApiSubscription and cannot be null");
            }
            else
            {
                this.ClientApplication = clientApplication;
            }
            // to ensure "href" is required (not null)
            if (href == null)
            {
                throw new InvalidDataException("href is a required property for EdgeDeviceResponseApiSubscription and cannot be null");
            }
            else
            {
                this.Href = href;
            }
        }
        
        /// <summary>
        /// ID of the nested resources
        /// </summary>
        /// <value>ID of the nested resources</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets ClientApplication
        /// </summary>
        [DataMember(Name="client_application", EmitDefaultValue=false)]
        public NestedIDHrefName ClientApplication { get; set; }

        /// <summary>
        /// href to the nested resource
        /// </summary>
        /// <value>href to the nested resource</value>
        [DataMember(Name="href", EmitDefaultValue=false)]
        public string Href { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdgeDeviceResponseApiSubscription {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ClientApplication: ").Append(ClientApplication).Append("\n");
            sb.Append("  Href: ").Append(Href).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdgeDeviceResponseApiSubscription);
        }

        /// <summary>
        /// Returns true if EdgeDeviceResponseApiSubscription instances are equal
        /// </summary>
        /// <param name="input">Instance of EdgeDeviceResponseApiSubscription to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdgeDeviceResponseApiSubscription input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ClientApplication == input.ClientApplication ||
                    (this.ClientApplication != null &&
                    this.ClientApplication.Equals(input.ClientApplication))
                ) && 
                (
                    this.Href == input.Href ||
                    (this.Href != null &&
                    this.Href.Equals(input.Href))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ClientApplication != null)
                    hashCode = hashCode * 59 + this.ClientApplication.GetHashCode();
                if (this.Href != null)
                    hashCode = hashCode * 59 + this.Href.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
